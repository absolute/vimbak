set guioptions-=T
syntax on
"colorscheme torte
colorscheme evening
"colorscheme wombat

:nnoremap <C-Tab> :bnext<CR>
:nnoremap <S-C-Tab> :bprevious<CR> 

set showtabline=0
:nmap tt  :tabnew<CR>
:nmap tn  :tabnext<CR>
:nmap tp  :tabprevious<CR>
:nmap tf  :tabfirst<CR>
:nmap tl  :tablast<CR>
:nmap t1  :tabnext 1<CR>
:nmap t2  :tabnext 2<CR>
:nmap t3  :tabnext 3<CR>
:nmap t4  :tabnext 4<CR>
:nmap t5  :tabnext 5<CR>
:nmap t6  :tabnext 6<CR>
:nmap ts  :tabs<CR>
:nmap qq  :q!<CR>
:nmap ww  :w<CR>
:nmap zz  :wq<CR>
:nmap ff  <C-f><CR>
:nmap gg  <C-b><CR>
:nmap ;w  :set wrap<CR>
:nmap ;nw :set wrap!<CR>
:nmap ;;as :e ~/projects/aims<CR>
:nmap ;;jt :e ~/projects/jtab<CR>
:nmap ;;rs :e ~/projects/rsvp-api<CR>
:nmap ;;sv :e ~/projects/7-connect-git<CR>
:nmap ;;sa :e ~/projects/shop-n-save-stamp-redemption<CR>
:nmap ;;cf :e ~/apps/config-files<CR>

:nmap 'n /_<CR>
:nmap 'm /[A-Z]<CR>
:nmap '5 /%<CR>
:nmap '= /=<CR>
:nmap ', /<<CR>
:nmap '. /><CR>

" Turn off useless toolbar
set guioptions-=T

" Turn off menu bar (toggle with CTRL+F10)
set guioptions-=m

" Turn off right-hand scroll-bar
set guioptions-=r

" CTRL+F10 to toggle the menu bar
nmap <C-F10> :if &guioptions=~'m' \| set guioptions-=m \| else \| set guioptions+=m \| endif<CR>

set foldmethod=indent " Code folding method
set nofoldenable " Open folds by default
set cf  " Enable error files & error jumping.
" set clipboard+=unnamed  " Yanks go on clipboard instead.
set history=256  " Number of things to remember in history.
set autowrite  " Writes on make/shell commands
set ruler  " Ruler on
set nu  " Line numbers on
"set nowrap  " Line wrapping off
set timeoutlen=250  " Time to wait after ESC (default causes an annoying delay)
" colorscheme vividchalk  " Uncomment this to set a default theme
 
" Formatting (some of these are for coding in C and C++)
set ts=2  " Tabs are 2 spaces
set bs=2  " Backspace over everything in insert mode
set shiftwidth=2  " Tabs under smart indent
set nocp incsearch
set cinoptions=:0,p0,t0
set cinwords=if,else,while,do,for,switch,case
set formatoptions=tcqr
set cindent
set autoindent
set smarttab
set expandtab
 
" Visual
set showmatch  " Show matching brackets.
set mat=5  " Bracket blinking.
" set list
" Show $ at end of line and trailing space as ~
set lcs=tab:\ \ ,eol:$,trail:~,extends:>,precedes:<
set novisualbell  " No blinking .
set noerrorbells  " No noise.
" set laststatus=2  " Always show status line.
 
" gvim specific
set mousehide  " Hide mouse after chars typed
set mouse=a  " Mouse in all modes

" Backups & Files
set backup                     " Enable creation of backup file.
set backupdir=~/.vim/backups " Where backups will go.
set directory=~/.vim/tmp     " Where temporary files will go.


filetype on  " Automatically detect file types.
set nocompatible  " We don't want vi compatibility.
 
" Add recently accessed projects menu (project plugin)
set viminfo^=!
 
" Minibuffer Explorer Settings
let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1
let g:miniBufExplMapCTabSwitchBufs = 1
let g:miniBufExplModSelTarget = 1
 
" alt+n or alt+p to navigate between entries in QuickFix
map <silent> <M-p> :cp <CR>
map <silent> <M-n> :cn <CR>
 
" Change which file opens after executing :Rails command
let g:rails_default_file='config/database.yml'

" Open line in file that contains first autotest failure
compiler rubyunit
nmap <Leader>fd :cf /tmp/autotest.txt<CR> :compiler rubyunit<CR>

" Custom navigation commands for rails.vim
autocmd User Rails Rnavcommand factory  test/factories -glob=**/*
autocmd User Rails Rnavcommand step features/step_definitions -glob=**/*
autocmd User Rails Rnavcommand cucumber features -glob=**/*
autocmd User Rails Rnavcommand db db/ -glob=**/*
autocmd User Rails Rnavcommand config config/ -glob=**/*
 
set incsearch "find the next match as we type the search
set hlsearch "hilight searches by default
 
set nowrap "dont wrap lines
set linebreak "wrap lines at convenient points

"NERDTree Toggle
"noremap <Leader>][ :NERDTreeToggle

" Set up command for NERDTree
map <leader>n :NERDTree<CR>
 
" Omni Completion
" *************************************************************
" May require ruby compiled in
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete

 
 
 
